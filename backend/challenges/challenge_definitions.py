# SQL challenges generated by LLM
challenges = [
    {
        "id": 1,
        "title": "Suspicious Refunds",
        "prompt": "Find users who received more than 2 refunds in a single month.",
        "difficulty": "Medium",
        "solution_sql": """
            SELECT u.user_id, strftime('%Y-%m', r.timestamp) AS refund_month, COUNT(*) AS refund_count
            FROM users u
            JOIN transactions t ON u.user_id = t.user_id
            JOIN refunds r ON t.txn_id = r.txn_id
            GROUP BY u.user_id, refund_month
            HAVING COUNT(*) > 2
        """,
        "expected_columns": ["user_id", "refund_month", "refund_count"]
    },
    {
        "id": 2,
        "title": "Top Merchants by Spend",
        "prompt": "Show the top 5 merchants by total transaction amount.",
        "difficulty": "Easy",
        "solution_sql": """
            SELECT merchant, ROUND(SUM(amount), 2) AS total_spent
            FROM transactions
            GROUP BY merchant
            ORDER BY total_spent DESC
            LIMIT 5
        """,
        "expected_columns": ["merchant", "total_spent"]
    },
    {
        "id": 3,
        "title": "Users with No Subscriptions",
        "prompt": "List all users who don't have any active subscription.",
        "difficulty": "Easy",
        "solution_sql": """
            SELECT u.user_id, u.name
            FROM users u
            LEFT JOIN subscriptions s ON u.user_id = s.user_id
            WHERE s.user_id IS NULL
        """,
        "expected_columns": ["user_id", "name"]
    },
    {
        "id": 4,
        "title": "Average Monthly Spend per User",
        "prompt": "Calculate the average monthly spending for each user.",
        "difficulty": "Hard",
        "solution_sql": """
            SELECT user_id,
                   ROUND(SUM(amount) / COUNT(DISTINCT strftime('%Y-%m', timestamp)), 2) AS avg_monthly_spend
            FROM transactions
            GROUP BY user_id
        """,
        "expected_columns": ["user_id", "avg_monthly_spend"]
    },
    {
        "id": 5,
        "title": "Currency Diversity",
        "prompt": "Find users who transacted in more than 2 different currencies.",
        "difficulty": "Medium",
        "solution_sql": """
            SELECT user_id, COUNT(DISTINCT currency) AS currency_count
            FROM transactions
            GROUP BY user_id
            HAVING currency_count > 2
        """,
        "expected_columns": ["user_id", "currency_count"]
    }
]
